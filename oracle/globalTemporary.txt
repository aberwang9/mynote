所有的操作都在一个事务里，事务提交后，此表清空，特别适合做插入删除频率特别高的临时表操作，比如插入完数据就开始查询，查询完就删掉等，用完就扔！

临时表分事务级临时表和会话级临时表。 
事务级临时表只对当前事务有效，通过语句：ON COMMIT DELETE ROWS 指定。 
会话级临时表对当前会话有效，通过语句：ON COMMIT PRESERVE ROWS语句指定。

Oracle DELETE和TRUNCATE 的区别
语法
delete from aa 
truncate table aa



/****************************************************************************************/
CREATE GLOBAL TEMPORARY TABLE WBL_INFO_ABER
(
       WBL_UUID VARCHAR2(64 BYTE),
       WBL_NUM VARCHAR2(20 BYTE),
       WBL_CNTR_QTY NUMBER(10),
       WBL_ALL_FRT NUMBER(20,2),
       
)
ON COMMIT DELETE ROWS;

DECLARE 
  DATE_FM DATE := to_date('20200301', 'yyyyMMdd');
BEGIN 
  for i in 1 .. 31 loop
    INSERT INTO T_WBL_INFO_POD
        SELECT POD_CDE, F_POL_CDE, POL_CDE, TRANS_TYPE, PRE_POL_CDE, PRE_TRANS_TYPE, CNTR_TYPE, DT, COUNT(1) QTY
        FROM 
          (
            SELECT LEG.WBL_NUM, LEG.POD_CDE, RTE.F_POL_CDE, LEG.POL_CDE, LEG.TRANS_TYPE TRANS_TYPE, PRE_LEG.POL_CDE PRE_POL_CDE, PRE_LEG.TRANS_TYPE PRE_TRANS_TYPE,
            CASE WHEN substr(CNTR.CNTR_TYPE, 0, 2) <= '20' THEN '20' ELSE '40' END AS CNTR_TYPE,
            to_char(SCH.BERTH_ARR_DT_LOC,'yyyyMMdd') DT
            FROM WBL_CNTR_LEG LEG
            JOIN WBL_CNTR CNTR ON CNTR.WBL_CNTR_UUID = LEG.WBL_CNTR_UUID
            JOIN WBL_RTE RTE ON RTE.WBL_WAYBILL_UUID = LEG.WBL_WAYBILL_UUID
            JOIN WBL_WAYBILL WBL ON WBL.WBL_WAYBILL_UUID = LEG.WBL_WAYBILL_UUID
            LEFT JOIN WBL_CNTR_LEG PRE_LEG ON PRE_LEG.WBL_CNTR_UUID = LEG.WBL_CNTR_UUID AND PRE_LEG.OCEAN_SEQ_NUM = LEG.OCEAN_SEQ_NUM - 1
            JOIN ITS_SCHEDULE SCH ON LEG.DSCH_SVVD = SCH.SVVD AND LEG.POD_FCIL_CDE = SCH.FCIL_CDE AND LEG.POD_CALL_NUM = SCH.CALL_NUM AND SCH.SCH_STATE = 'longterm'
          WHERE SCH.BERTH_ARR_DT_LOC >= DATE_FM
            AND SCH.BERTH_ARR_DT_LOC < DATE_FM + 1
            AND WBL.WBL_TYPE = 'NORMAL'
            AND WBL.WBL_STATUS IN ('CONFIRM', 'BL_READY') 
            AND NOT EXISTS (SELECT 1 FROM WBL_CNTR_LEG NXT_LEG WHERE NXT_LEG.WBL_CNTR_UUID = LEG.WBL_CNTR_UUID AND NXT_LEG.OCEAN_SEQ_NUM = LEG.OCEAN_SEQ_NUM + 1)
        ORDER BY LEG.WBL_NUM
            ) MON_ARR_CNTR_STAT
        GROUP BY POD_CDE, F_POL_CDE, POL_CDE, TRANS_TYPE, PRE_POL_CDE, PRE_TRANS_TYPE, CNTR_TYPE, DT;
        
        DATE_FM := DATE_FM + 1;
  end loop;
END;

SELECT * FROM T_WBL_INFO_POD 
TRUNCATE TABLE T_WBL_INFO_POD;
DROP TABLE T_WBL_INFO_POD;



