MERGE语句是Oracle9i新增的语法，用来合并UPDATE和INSERT语句。通过MERGE语句，根据一张表或子查询的连接条件对另外一张表进行查询，连接条件匹配上的进行UPDATE，无法匹配的执行INSERT。
这个语法仅需要一次全表扫描就完成了全部工作，执行效率要高于INSERT＋UPDATE。


 MERGE INTO WBL_WAYBILL_DATA D
      USING(
            SELECT
                  WBL.WBL_WAYBILL_UUID,WBL.WBL_NUM,WBL.WBL_STATUS,WBL.SERIAL_NUM,WBL.OB_DR_PD_CTLG_CDE,WBL.MAIN_PD_CTLG_CDE,WBL.IB_DR_PD_CTLG_CDE
                 ,WBL.RELEASE_STATUS,WBL.OB_TRAFFIC_TERM,WBL.IB_TRAFFIC_TERM,WBL.PYMT_TERM,WBL.FRT_CALC_STATUS,WBL.AGMT_ID,WBL.RELEASE_DT,WBL.ISSUE_DT
                 ,WBL.WBL_BKG_REG,WBL.WBL_BKG_OFCE,WBL.SALES_OFCE_CDE,WBL.SALES_CDE,WBL.WBL_IB_CTRL_OFCE,WBL.CUST_LVL_CDE,WBL.WBL_SUB_SOURCE
                 ,WBL.WBL_SUBMIT_DT,WBL.WBL_AUD_DT,WBL.WBL_SOURCE,WBL.REMARK,WBL.IS_SEA_RAIL,WBL.CGO_READY_DT,WBL.WBL_TYPE,WBL.BKG_MTHD
                 ,CASE WHEN WBL.WBL_STATUS IN ('CONFIRM','BL_READY','BL_RELEASED') THEN 1 ELSE 0 END IS_ACTIVE
                 ,SUBSTR(WBL.AGMT_ID, 1, 8) CSO_NUM,SALES_OFCE.REG_CDE SALES_REG_CDE,IB_CTRL_OFCE.REG_CDE IB_CTRL_REG_CDE
                 ,WBL.OB_DR_PD_CTLG_NME,WBL.MAIN_PD_CTLG_NME,WBL.IB_DR_PD_CTLG_NME,OFCE1.OFCE_CNNME SALES_OFCE_NME
                 ,OFCE2.OFCE_CNNME WBL_IB_CTRL_OFCE_NME,SALES.SALES_CNNME,WBL.AUD_DURATION,OFCE3.OFCE_CNNME WBL_BKG_OFCE_NME
                 ,T_TIME.REPORTING_MONTH  REPORT_MONTH,T_TIME.REPORTING_WEEK REPORT_WEEK
                 ,T_TIME.REPORTING_YR REPORT_YEAR,WBL.WBL_AUD_BY,WBL.IS_CUST_RELEASE_APPLIED,WBL.IS_POL_RELEASE,WBL.IS_POD_RELEASE
                 ,TERR.REG_TERR_CNNME
            FROM T_WBL_UUIDS UUIDS INNER JOIN WBL_WAYBILL WBL ON UUIDS.UUID = WBL.WBL_WAYBILL_UUID
            LEFT JOIN BD_OFCE_HIERARCHY SALES_OFCE ON SALES_OFCE.OFCE_CDE = WBL.SALES_OFCE_CDE AND SALES_OFCE.HIERARCHY_TYPE = 'Sales'
            LEFT JOIN BD_OFCE OFCE1 ON OFCE1.OFCE_CDE = WBL.SALES_OFCE_CDE
            LEFT JOIN BD_OFCE_HIERARCHY IB_CTRL_OFCE ON IB_CTRL_OFCE.OFCE_CDE = WBL.WBL_IB_CTRL_OFCE AND IB_CTRL_OFCE.HIERARCHY_TYPE = 'Booking'
            LEFT JOIN BD_OFCE OFCE2 ON OFCE2.OFCE_CDE = WBL.WBL_IB_CTRL_OFCE
            LEFT JOIN BD_SALES SALES ON WBL.SALES_CDE = SALES.SALES_CDE 
            LEFT JOIN BD_OFCE OFCE3 ON OFCE3.OFCE_CDE = WBL.WBL_BKG_OFCE
            LEFT JOIN BD_REG_TERR TERR ON TERR.REG_TERR_CDE = WBL.WBL_BKG_REG
            LEFT JOIN O_TIME T_TIME ON extract(year from WBL.WBL_AUD_DT) = T_TIME.CALENDR_YR
                                                         AND extract(month from WBL.WBL_AUD_DT) = T_TIME.CALENDR_MONTH 
                                                         AND extract(day from WBL.WBL_AUD_DT) = T_TIME.CALENDR_DAY
      )T
      ON(T.WBL_WAYBILL_UUID = D.WBL_WAYBILL_DATA_UUID)
      WHEN MATCHED THEN
           UPDATE SET D.WBL_STATUS = T.WBL_STATUS,D.OB_DR_PD_CTLG_CDE = T.OB_DR_PD_CTLG_CDE,D.MAIN_PD_CTLG_CDE = T.MAIN_PD_CTLG_CDE
           ,D.IB_DR_PD_CTLG_CDE = T.IB_DR_PD_CTLG_CDE,D.RELEASE_STATUS = T.RELEASE_STATUS,D.OB_TRAFFIC_TERM = T.OB_TRAFFIC_TERM
           ,D.IB_TRAFFIC_TERM = T.IB_TRAFFIC_TERM,D.PYMT_TERM = T.PYMT_TERM,D.FRT_CALC_STATUS = T.FRT_CALC_STATUS,D.AGMT_ID_WITH_VER = T.AGMT_ID
           ,D.WBL_BKG_REG = T.WBL_BKG_REG,D.WBL_BKG_OFCE = T.WBL_BKG_OFCE,D.WBL_SALES_OFCE_CDE = T.SALES_OFCE_CDE,D.SALES_CDE = T.SALES_CDE
           ,D.WBL_IB_CTRL_OFCE = T.WBL_IB_CTRL_OFCE,D.WBL_SUBMIT_DT = T.WBL_SUBMIT_DT,D.WBL_SOURCE = T.WBL_SOURCE,D.WBL_AUD_DT = T.WBL_AUD_DT
           ,D.REMARK = T.REMARK,D.REC_UPD_DT = sysdate,D.IS_ACTIVE = T.IS_ACTIVE,D.IS_SEA_RAIL = T.IS_SEA_RAIL,D.CGO_READY_DT = T.CGO_READY_DT
           ,D.CUST_LVL_CDE = T.CUST_LVL_CDE,D.WBL_TYPE = T.WBL_TYPE,D.CSO_NUM = T.CSO_NUM,D.WBL_SALES_REG = T.SALES_REG_CDE
           ,D.WBL_IB_CTRL_REG = T.IB_CTRL_REG_CDE,D.OB_DR_PD_CTLG_NME = T.OB_DR_PD_CTLG_NME,D.MAIN_PD_CTLG_NME = T.MAIN_PD_CTLG_NME
           ,D.IB_DR_PD_CTLG_NME = T.IB_DR_PD_CTLG_NME,D.WBL_SALES_OFCE_NME = T.SALES_OFCE_NME,D.WBL_IB_CTRL_OFCE_NME = T.WBL_IB_CTRL_OFCE_NME
           ,D.SALES_NME = T.SALES_CNNME,D.REPORT_MONTH = T.REPORT_MONTH,D.REPORT_WEEK = T.REPORT_WEEK,D.AUD_DURATION = T.AUD_DURATION
           ,D.WBL_BKG_OFCE_NME = T.WBL_BKG_OFCE_NME,D.REPORT_YEAR = T.REPORT_YEAR,D.WBL_AUD_BY = T.WBL_AUD_BY
           ,D.IS_CUST_RELEASE_APPLIED = T.IS_CUST_RELEASE_APPLIED,D.IS_POL_RELEASE = T.IS_POL_RELEASE,D.IS_POD_RELEASE = T.IS_POD_RELEASE
           ,D.REG_TERR_NME = T.REG_TERR_CNNME,D.RELEASE_DT = T.RELEASE_DT,D.ISSUE_DT = T.ISSUE_DT,D.WBL_SUB_SOURCE = T.WBL_SUB_SOURCE
           ,D.BKG_MTHD = T.BKG_MTHD
       WHEN NOT MATCHED THEN
            INSERT (
                   WBL_WAYBILL_DATA_UUID,WBL_NUM,SERIAL_NUM,WBL_STATUS,OB_DR_PD_CTLG_CDE,MAIN_PD_CTLG_CDE,IB_DR_PD_CTLG_CDE,RELEASE_STATUS
                   ,OB_TRAFFIC_TERM,IB_TRAFFIC_TERM,PYMT_TERM,FRT_CALC_STATUS,AGMT_ID_WITH_VER,WBL_BKG_REG,WBL_BKG_OFCE,WBL_SALES_OFCE_CDE
                   ,SALES_CDE,WBL_IB_CTRL_OFCE,WBL_SUBMIT_DT,WBL_SOURCE,WBL_AUD_DT,REMARK,REC_CRE_DT,REC_VER,IS_ACTIVE,IS_SEA_RAIL,CGO_READY_DT
                   ,CUST_LVL_CDE,WBL_TYPE,CSO_NUM,WBL_SALES_REG,WBL_IB_CTRL_REG,OB_DR_PD_CTLG_NME,MAIN_PD_CTLG_NME,IB_DR_PD_CTLG_NME
                   ,WBL_SALES_OFCE_NME,WBL_IB_CTRL_OFCE_NME,SALES_NME,REPORT_MONTH,REPORT_WEEK,AUD_DURATION,WBL_BKG_OFCE_NME,REPORT_YEAR
                   ,WBL_AUD_BY,IS_CUST_RELEASE_APPLIED,IS_POL_RELEASE,IS_POD_RELEASE,REG_TERR_NME,RELEASE_DT,ISSUE_DT,WBL_SUB_SOURCE,BKG_MTHD
            )VALUES(
                   T.WBL_WAYBILL_UUID,T.WBL_NUM,T.SERIAL_NUM,T.WBL_STATUS,T.OB_DR_PD_CTLG_CDE,T.MAIN_PD_CTLG_CDE,T.IB_DR_PD_CTLG_CDE,T.RELEASE_STATUS
                   ,T.OB_TRAFFIC_TERM,T.IB_TRAFFIC_TERM,T.PYMT_TERM,T.FRT_CALC_STATUS,T.AGMT_ID,T.WBL_BKG_REG,T.WBL_BKG_OFCE,T.SALES_OFCE_CDE
                   ,T.SALES_CDE,T.WBL_IB_CTRL_OFCE,T.WBL_SUBMIT_DT,T.WBL_SOURCE,T.WBL_AUD_DT,T.REMARK,sysdate,0,T.IS_ACTIVE,T.IS_SEA_RAIL,T.CGO_READY_DT
                   ,T.CUST_LVL_CDE,T.WBL_TYPE,T.CSO_NUM,T.SALES_REG_CDE,T.IB_CTRL_REG_CDE,T.OB_DR_PD_CTLG_NME,T.MAIN_PD_CTLG_NME,T.IB_DR_PD_CTLG_NME
                   ,T.SALES_OFCE_NME,T.WBL_IB_CTRL_OFCE_NME,T.SALES_CNNME,T.REPORT_MONTH,T.REPORT_WEEK,T.AUD_DURATION,T.WBL_BKG_OFCE_NME,T.REPORT_YEAR
                   ,T.WBL_AUD_BY,T.IS_CUST_RELEASE_APPLIED,T.IS_POL_RELEASE,T.IS_POD_RELEASE,T.REG_TERR_CNNME,T.RELEASE_DT,T.ISSUE_DT,T.WBL_SUB_SOURCE
                   ,T.BKG_MTHD
            );
			
			
			
语句结构为
MERGE [INTO [schema .] table [t_alias] 
USING [schema .] { table | view | subquery } [t_alias] 
ON ( condition ) 
WHEN MATCHED THEN merge_update_clause 
WHEN NOT MATCHED THEN merge_insert_clause;
	


MERGE INTO WBL_WAYBILL_DATA D
	  USING(
		SELECT DISTINCT U.UUID AS WBL_WAYBILL_UUID,
		FIRST_VALUE(CNTR.SOC) OVER(PARTITION BY CNTR.WBL_WAYBILL_UUID ORDER BY CNTR.CNTR_NUM) AS SOC,
		FIRST_VALUE(CNTR.IS_EMPTY) OVER(PARTITION BY CNTR.WBL_WAYBILL_UUID ORDER BY CNTR.CNTR_NUM DESC) AS IS_EMPTY
		FROM T_WBL_UUIDS U
		INNER JOIN WBL_CNTR CNTR ON CNTR.WBL_WAYBILL_UUID = U.UUID
	  ) T ON(T.WBL_WAYBILL_UUID = D.WBL_WAYBILL_DATA_UUID)
	  WHTN MATCHED THEN
	  	UPDATE SET D.SOC = T.SOC, D.IS_EMPTY = T.IS_EMPTY;
		
		6795
		5976